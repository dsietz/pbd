name: Development

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  coveralls-grcov:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      #- name: Nightly install
      #  uses: actions-rs/toolchain@v1
      #  with:
      #    toolchain: nightly
      #    override: true
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cargo clean
        uses: actions-rs/cargo@v1
        with:
          command: clean    
      #- name: Run test for coverage
      #  uses: actions-rs/cargo@v1
      #  with:
      #    command: test
      #  env:
      #    CARGO_INCREMENTAL: 0
      #    RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      #    RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      #- name: Gather coverage data
      #  id: coverage
      #  uses: actions-rs/grcov@v0.1
      #  with:
      #    config: .github/workflows/configs/grcov.yml
      - name: Gather coverage data
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          out-type: 'Lcov'
          run-types: Tests
          args: '-- --test-threads 1'  
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          #coveralls-token: ${{ secrets.COVERALLS_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}          
          parallel: true

  grcov_finalize:
    name: Grcov Finalize
    runs-on: ubuntu-latest
    needs: coveralls-grcov
    steps:
      - name: Coveralls finalization
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true        